1、什么是程序程序？
	写在 txt 文件中的 cpu 的指令集，静态概念
	
2、什么是进程？
	是一个操作系统级别的概念，是操作系统分配调度资源的基本单位，动态概念
	
3、什么是线程？
	是一个 cpu 级别的改您，是 cpu 时间片资源分配调度的基本单位
	
4、进程和线程的区别？
	线程之间共享一个进程中操作系统分配的所有资源，
	进程之间不相互影响，但线程之间相互影响，一个线程死掉就等于这个进程中所有线程一起死掉（即这个进程整个死掉），因为线程时进程的一部分，是进程的一条执行路径
	一个程序 = n个进程，一个进程 = n个线程
	
5、什么是死锁?
	不同程序相互等待对方独占的资源释放

6、死锁的预防方法有哪些？
	a. 当一个程序独占A资源，但又申请B资源，且得不到B资源的时候，释放A资源
	b. 一个程序占有资源之前检查是否能获取所有资源，若获取不到，则不占用任何资源
	c. 对资源进行编号，只有已经占用了小号的资源后，才能申请大号的资源
	
7、什么是安全序列？
	是指系统中的所有进程能够按照某一种次序分配资源，并且依次地运行完毕，这种进程序列{P1，P2，...，Pn}就是安全序列
	
8、银行家算法是什么？
	多个进程同时申请某个资源，只给获取资源后能完成当前事件的进程分配资源。
	例如：有三个客户C1，C2，C3 同时向银行家借款，银行家总共有10个资金单位，
		其中C1客户要借9各资金单位，但已经占用2个，缺7个
		C2客户要借3个资金单位，但已经占用2个，缺1个
		C3客户要借8个资金单位，但已经占用4个，缺4个
		所以银行家只剩余 2 个资金单位，
		那么银行家先给C2分配资源，让C2完成事件，并返回3个资源，然后再借给C3，然后再借给C1
		
9、死锁的检测与恢复算法有哪些？
	
	
线程的状态：
                                ┌─         阻塞状态               ─┐
                           {阻塞的解除}                      {导致阻塞的事件}         
                                │                                  │           
新生状态  ─ {执行start方法 } ─ 就绪状态  ─ {CPU调度并分配时间片} ─  运行状态 ─ {运行结束或kill} ─  死亡状态

线程的停止：
1、线程体正常执行结束
2、设置flag标志停止线程

线程的操作：
join
yield
sleep： 不释放锁资源

wait：表示等待当前实例（对象）的锁
notify: 通知等待当前实例的锁的线程，随机通知一个
notifyAll: 通知全部

线程优先级：
setPriority()

线程同步：synchronized



