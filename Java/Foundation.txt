/******************************* Java Foundation ************************/
1. 不管 java 源文件的字符编码格式是何种字符集，当编译成 .class 文件后，编码格式都转化成 unicode(UTF-16) 格式
2. Java String 类型在内存中也是使用 unicode 编码的，只有在需要向其他地方输出的时候才转换成适配输出环境的编码格式
3. Java 中的缺点：
    继承的缺点：不灵活，修改父类需要修改对应子类
    Solution: 使用组合和委托的方式避开继承，然后使用 Label 来对 class 分类，例如 Java 中的 Interface
    封装的缺点：因为 Java 实例（对象）是传引用的，不是传值，所以会造成方法中对实例修改后影响原本的实例
    Solution: 语言特性，没有办法，或许可以先 clone 一个实例再执行操作
    
4. Java 中类和对象的理解
    类：一个事物的配置，相当于数据库中的表结构
    对象：一个事物的具体配置，相当于数据库中一张表中的记录
    
5. Java 中导包的问题
    import kasei.serlet.*;  // 该导包语句只能导入当前包中的类，不会级联导入子包中的类
  
/* Java 变量：
 * 标识符：$  数字   _  英文字母（不能以数字开头）
 * 类型：
 * 局部变量：定义于方法或语句块；使用之前必须要手动初始化，否则编译出错
 * 成员变量（实例变量）：定义于类里面、方法外面，从属于对象；系统自动初始化
 * 静态变量（类变量）：static 修饰，从属于类
 *
 * java 基本数据类型
 * 数据类型			默认值						包装类			占字节数
 * boolean			false						Boolean			视编译环境而定
 * char				‘\u0000’(null)				Character		2
 *
 * byte				0b00000000					Byte			1
 * short			0							Short			2
 * int				0（直接常量默认类型）			Integer			4
 * long				0l							Long			8
 *
 * float			0.0f						Float			4
 * double			0.0d（直接常量默认类型）		Double			8
 *
 * 引用类型			null						无
 * */
