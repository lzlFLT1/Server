基础概念剖析：
1. 每一个 main 函数都会启动一个独立的 JVM 实例， JVM 实例对应的进程名称为 java.exe(无窗口) 或者 javaw.exe(有窗口)
2. JVM 中有 守护线程 和 非守护线程，只要任何 非守护线程 没有结束，那么当前的 JVM 实例就不会结束
3. 每一个 JVM 实例都包含如下数据结构 {
    PermanentArea(方法区)：类变量、
    Heap(堆)：ClassLoader 实例、Class 类的实例、Object 类实例、实例变量
    Stack(栈，每个线程独立一个栈)：方法局部变量
    PC Register(寄存器)：
    本地方法栈(Native 方法执行的栈)：
}

4. 一个 JVM 实例 可以启动多个线程，各个线程 共享该 JVM 实例的 PermanentArea 和 Heap 两个内存区域的数据，而 Stack 和 PC Register 是每个线程独立的
5. 每个线程操作 共享区域的数据时，都先拷贝一份到线程本地进行操作，操作完了再同步到共享区域。
    volatile 关键字可以使线程每次都从 共享区域取值，并在改变后立马同步到到共享区域
    ThreadLocal 类：如果实例变量类型为该类，那么在创建该实例变量的时候，不会保存在 共享区域（Heap） 中，而是在 线程栈中创建独立发副本，该实例变量副本可以在该线程内部任何地方法使用
    
    
    
    
